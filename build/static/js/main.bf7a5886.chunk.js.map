{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/Header.js","components/AddTodo.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","completed","_this","props","todo","textDecoration","backgroundColor","color","margin","_this$props","this","toggleComplete","delTodo","react_default","a","createElement","className","style","type","onChange","bind","id","title","onClick","btnStyle","Component","padding","float","Todos","todos","map","components_TodoItem","key","Header","react_router_dom","to","AddTodo","state","onSubmit","e","preventDefault","length","addTodo","setState","Object","defineProperty","target","name","value","display","placeholder","flex","About","Fragment","App","uuid","v4","toConsumableArray","filter","newTodo","concat","_this2","components_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf7a5886.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoItem extends Component {\n\n\tgetStyle = () => {\n\t\tconst { completed } = this.props.todo;\n\t\treturn {\n\t\t\ttextDecoration: completed ? \"line-through\" : \"none\",\n\t\t\tbackgroundColor: completed ? \"grey\" : \"#f9f9f9\",\n\t\t\tcolor: completed ? \"white\" : \"black\",\n\t\t\tmargin: \"1em\"\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { todo, toggleComplete, delTodo } = this.props;\n\t\treturn (\n\t\t\t<div className=\"card\" style={this.getStyle()}>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<input type=\"checkbox\" onChange={toggleComplete.bind(this, todo.id)} />\n\t\t\t\t\t\t{todo.title}\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={delTodo.bind(this, todo.id)} style={btnStyle}>X</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst btnStyle = {\n\tpadding: \"5px 10px\",\n\tfloat: \"right\"\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass Todos extends Component {\n\n\trender() {\n\t\treturn this.props.todos.map((todo) => (\n\t\t\t<TodoItem\n\t\t\t\tkey={todo.id}\n\t\t\t\ttodo={todo}\n\t\t\t\ttoggleComplete={this.props.toggleComplete}\n\t\t\t\tdelTodo={this.props.delTodo}\n\t\t\t/>\n\t\t));\n\t}\n}\n\nexport default Todos\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<h1>TodoList</h1>\n\t\t\t<div className=\"head-text\">\n\t\t\t\t<Link className=\"head-link\" to=\"/\">Home</Link>\n\t\t\t\t<span>|</span>\n\t\t\t\t<Link className=\"head-link\" to=\"/about\">About</Link>\n\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t{\" \"}\n\t\t</header>\n\t);\n}\n\nexport default Header\n","import React, { Component } from 'react';\n\nclass AddTodo extends Component {\n\tstate = {\n\t\ttitle: \"\"\n\t}\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst { title } = this.state;\n\t\tif(title.length > 0) {\n\t\t\tthis.props.addTodo(title);\n\t\t\tthis.setState({title: \"\"});\n\t\t}\n\t}\n\n\tonChange = (e) => this.setState({[e.target.name]: e.target.value})\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit} className=\"mt-3\" style={{display: \"flex\"}}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Add Todo Item\"\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\tstyle={{flex: \"8\", padding: \"5px\"}}\n\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\tclassName=\"btn btn-success ml-3\"\n\t\t\t\t\tstyle={{flex: \"1\"}}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddTodo\n","import React from 'react';\n\nfunction About() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1>About</h1>\n\t\t\t<p>This is the TodoList app version 1.0.0. It is part of a React Crash Course.</p>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default About\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './pages/About';\nimport './App.css';\nimport uuid from 'uuid';\n\nclass App extends Component {\n\tstate = {\n\t\ttodos: [\n\t\t\t{\n\t\t\t\tid: uuid.v4(),\n\t\t\t\ttitle: \"Take out the trash\",\n\t\t\t\tcompleted: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: uuid.v4(),\n\t\t\t\ttitle: \"Make dinner\",\n\t\t\t\tcompleted: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: uuid.v4(),\n\t\t\t\ttitle: \"Work on website\",\n\t\t\t\tcompleted: false\n\t\t\t},\n\t\t]\n\t}\n\n\t// Toggle `this.complete` for TodoItem\n\ttoggleComplete = (id) => {\n\t\tthis.setState({ todos: this.state.todos.map(todo => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t}\n\t\t\treturn todo;\n\t\t}) });\n\t}\n\n\t// Delete TodoItem\n\tdelTodo = (id) => {\n\t\tthis.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n\t}\n\n\t// Add TodoItem\n\taddTodo = (title) => {\n\t\tconst newTodo = { id: uuid.v4(), title, completed: false }\n\t\tthis.setState({todos: [...this.state.todos, newTodo]});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Route exact path=\"/\" render={props => (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<AddTodo addTodo={this.addTodo} />\n\t\t\t\t\t\t\t\t<Todos\n\t\t\t\t\t\t\t\t\ttodos={this.state.todos}\n\t\t\t\t\t\t\t\t\ttoggleComplete={this.toggleComplete}\n\t\t\t\t\t\t\t\t\tdelTodo={this.delTodo}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)} />\n\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>\n\t,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}